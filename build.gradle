plugins {
    id 'fabric-loom' version '1.9-SNAPSHOT'
    id 'maven-publish'
    //id("com.gradleup.shadow") version "8.3.6"
}

version = project.mod_version
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

loom {
    runs {
        client {
            programArgs([
                    "--username", "Dev",
                    "--uuid", "12345678-1234-1234-1234-123456789012"
            ])
            runDir "run/client"
        }
        server {
            runDir "run/server"
        }
    }
    accessWidenerPath = file("src/main/resources/shape-shifter-curse.accesswidener")
}


repositories {
    // Add repositories to retrieve artifacts from in here.
    // You should only use this when depending on other mods because
    // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
    // See https://docs.gradle.org/current/userguide/declaring_repositories.html
    // for more information about repositories.
    maven {
        url 'https://maven.aliyun.com/nexus/content/groups/public'
    }
    //maven {
        //url 'https://repository.hanbings.io/proxy'
        //mavenCentral()
    //}

    // The Maven with the mods source
    maven { url 'https://maven.azuredoom.com/mods' }

    maven { url 'https://dl.cloudsmith.io/public/azuredoom-mods/azurelib/maven/' }

    //Owo
    maven { url 'https://maven.wispforest.io/releases/' }


    exclusiveContent {

        forRepository {
            maven {
                name = "Modrinth"
                url = "https://api.modrinth.com/maven"
            }
        }

        filter {
            includeGroup "maven.modrinth"
        }

    }

    // ForgeMaven
    exclusiveContent {
        forRepository {
            maven {
                url "https://cursemaven.com"
            }
        }
        filter {
            includeGroup "curse.maven"
        }
    }

    maven {
        name = "QuiltMC"
        url = "https://maven.quiltmc.org/repository/release"
    }
    maven {
        name = "Ladysnake Mods"
        url = "https://maven.ladysnake.org/releases"
    }
    maven {
        url = "https://maven.cafeteria.dev"
        content {
            includeGroup "net.adriantodt.fabricmc"
        }
    }
    maven {
        url = "https://maven.jamieswhiteshirt.com/libs-release"
        content {
            includeGroup "com.jamieswhiteshirt"
        }
    }
    maven {
        url = "https://masa.dy.fi/maven"
    }
    maven {
        url = "https://jitpack.io"
    }
    maven {
        url = "https://maven.shedaniel.me"
    }
    maven {
        url = "https://maven.terraformersmc.com"
    }

    // player animator
    maven {
        name "KosmX's maven"
        url 'https://maven.kosmx.dev/'
    }

    maven {
        name = "Fuzs Mod Resources"
        url = "https://raw.githubusercontent.com/Fuzss/modresources/main/maven/"
    }
    mavenLocal()
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    implementation 'com.google.code.gson:gson:2.12.1'

    //mappings loom.layered() {
    //    officialMojangMappings()
    //    parchment("org.parchmentmc.data:parchment-1.20.1:2023.09.03@zip")
    //}

    //Common 1.20.1+ Latest Only
    //compileOnly "mod.azure.azurelib:azurelib-common-1.20.1:2.0.41"

    //Fabric or Quilt
    modImplementation "mod.azure.azurelib:azurelib-fabric-1.20.1:${azurelib_version}"
    //modCompileOnly "maven.modrinth:azurelib:2.1.17"


    //Owo
    //modImplementation "io.wispforest:owo-lib:${project.owo_version}"
    //include "io.wispforest:owo-sentinel:${project.owo_version}"
    //annotationProcessor modImplementation("io.wispforest:owo-lib:${project.owo_version}")
    modCompileOnly "io.wispforest:owo-lib:${owo_version}"
    modRuntimeOnly "io.wispforest:owo-lib:${owo_version}"

    // Rich Translatable Text
    modLocalRuntime "curse.maven:rich-translatable-text-1342784:6975662"

    // satin shader
    modImplementation "org.ladysnake:satin:${satin_version}"

    // Reach Entity Attributes by jamieswhiteshirt
    modImplementation "com.jamieswhiteshirt:reach-entity-attributes:${project.reach_version}"

    // player ability lib
    //modImplementation "io.github.ladysnake:PlayerAbilityLib:${pal_version}"
    //include "io.github.ladysnake:PlayerAbilityLib:${pal_version}"

    // Apoli by Apace100
    modImplementation "com.github.apace100:apoli:${project.apoli_version}"
    include "com.github.apace100:apoli:${project.apoli_version}"

    modApi("com.github.Virtuoel:Pehkui:${pehkui_version}", {
        exclude group: "net.fabricmc.fabric-api"
    })

    // Origins by Apace100
    //modImplementation "com.github.apace100:origins-fabric:${project.origins_version}"

    // BreathingLib (fork) by eggohito
    //modImplementation "com.github.eggohito:BreathingLib:${project.breathing_lib_version}"
    //include "com.github.eggohito:BreathingLib:${project.breathing_lib_version}"

    modApi("dev.onyxstudios.cardinal-components-api:cardinal-components-base:${cca_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }
    modApi("dev.onyxstudios.cardinal-components-api:cardinal-components-entity:${cca_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }

    modApi("me.shedaniel.cloth:cloth-config-fabric:${project.clothconfig_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }
    include modApi("com.jamieswhiteshirt:reach-entity-attributes:${project.reach_version}")
    //  Modmenu
    modImplementation "com.terraformersmc:modmenu:${project.mod_menu_version}"
    // Player Anim
    include modImplementation("dev.kosmx.player-anim:player-animation-lib-fabric:${project.player_anim}")

    // Fabric forge config api port
    modLocalRuntime "fuzs.forgeconfigscreens:forgeconfigscreens-fabric:8.0.0"


    //modImplementation "com.github.eggohito:eggolib:${project.eggolib_version}"
    //include "com.github.eggohito:eggolib:${project.eggolib_version}"

    modCompileOnly "maven.modrinth:iris:URWeWMAt"
    modCompileOnly "maven.modrinth:extra-origins:spXxXXgx"
    modCompileOnly "maven.modrinth:origins-classes:EnGfmh9y"
    modCompileOnly "maven.modrinth:bendy-lib:DFxVCaiC"
    modCompileOnly "maven.modrinth:better-combat:MxaoPSMy"
    modCompileOnly "maven.modrinth:playeranimator:cfkAgcOh"
    modCompileOnly "maven.modrinth:first-person-model:mquWPSix"
    modRuntimeOnly "maven.modrinth:first-person-model:mquWPSix"

    modCompileOnly "maven.modrinth:vivecraft:9Sa2NEEb"
    annotationProcessor(files("libs/mixinextras-fabric-0.2.0-beta.8.jar"))

}

processResources {
    inputs.property "version", project.version
    inputs.property "minecraft_version", project.minecraft_version
    inputs.property "loader_version", project.loader_version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version,
                "minecraft_version": project.minecraft_version,
                "loader_version": project.loader_version
    }
}

def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release.set(targetJavaVersion)
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}


jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

// configure the maven publication
publishing {
    publications {
        create("mavenJava", MavenPublication) {
            artifactId = project.archives_base_name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}
